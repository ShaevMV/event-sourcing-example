# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  _instanceof:
    \Shared\Domain\Bus\Projection\Projection:
      tags: [ 'shared.domain.bus.projector.projection' ]
    \Shared\Domain\EventSourcing\Upcasting\Upcaster:
      tags: [ 'shared.domain.eventsourcing.upcasting.upcaster' ]

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../app/'
    exclude:
      - '../src/DependencyInjection/'
      - '../src/Entity/'
      - '../src/Kernel.php'

  Auth\:
    resource: '../src/Auth/src/'

  OrganizationalFees\:
    resource: '../src/OrganizationalFees/src/'

  Shared\:
    resource: '../src/Shared/src/'

  Shared\Infrastructure\Tests\Doctrine\DatabaseArranger:
    public: true

  OrganizationalFees\Application\Command\OrderCreate\OrderCreateCommandHandler:
    public: true
  Auth\Application\Command\UserRegister\UserRegisterCommandHandler:
    public: true
  OrganizationalFees\Infrastructure\Repository\Domain\Order\EventStore\EsOrderRepositoryPersistence:
    public: true

  OrganizationalFees\Application\Query\GetOrderList\GetOrderListQueryHandler:
    public: true

  OrganizationalFees\Infrastructure\Repository\Domain\ArrangementFee\EventStory\EsArrangementFeeRepositoryPersistence:
    public: true

  OrganizationalFees\Application\Command\AddArrangementFee\AddArrangementFeeCommandHandler:
    public: true

  Shared\Infrastructure\Tests\Doctrine\DatabaseArrangerInterface: '@Shared\Infrastructure\Tests\Doctrine\DatabaseArranger'

  Auth\Domain\User\Model\UserRepositoryPersistence: '@Auth\Infrastructure\Repository\Domain\User\EventStore\EsUserRepositoryPersistence'

  OrganizationalFees\Domain\ArrangementFee\Model\ArrangementFeeRepositoryPersistence: '@OrganizationalFees\Infrastructure\Repository\Domain\ArrangementFee\EventStory\EsArrangementFeeRepositoryPersistence'

  #    Shared\Infrastructure\Bus\Projection\Projector\InMemory\ProjectorInMemory:
  #      arguments: [ !tagged shared.domain.bus.projector.projection ]
  
  Shared\Infrastructure\Bus\Projection\Projector\Redis\ProjectorConsumer:
    arguments: [ !tagged shared.domain.bus.projector.projection ]
    public: true

  Shared\Domain\Bus\Projection\Projector: '@Shared\Infrastructure\Bus\Projection\Projector\Redis\ProjectorProducer'

  Shared\Domain\Bus\Event\Deserializer: '@Shared\Infrastructure\Bus\Event\Serializer\JMS\JMSSerializer'

  Shared\Infrastructure\Bus\Event\Serializer\UpcastSerializer:
    decorates: Shared\Domain\Bus\Event\Deserializer
    arguments: [ '@.inner', !tagged shared.domain.eventsourcing.upcasting.upcaster ]